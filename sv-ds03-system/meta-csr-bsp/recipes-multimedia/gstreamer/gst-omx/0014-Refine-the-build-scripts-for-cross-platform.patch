From f9c870252202c2f06ae0e247695251f23a217f8a Mon Sep 17 00:00:00 2001
From: Yiming Cao <cyiming@codeaurora.org>
Date: Mon, 19 Jan 2015 17:00:28 +0800
Subject: [PATCH 14/67] Refine the build scripts for cross-platform

Change-Id: I4c50b33872e8b44c6b3ac09718847a00466cd2e2
Signed-off-by: Yiming Cao <cyiming@codeaurora.org>
---
 Makefile.am     |   5 +
 autogen.sh      | 113 ++++++++++++-
 configure.ac    | 499 +++++++++++++++++++++++++++++++++++++++++++++++++++-----
 makefile.am     |   5 -
 omx/Makefile.am |  60 +++++++
 omx/makefile.am |  57 -------
 6 files changed, 630 insertions(+), 109 deletions(-)
 create mode 100644 Makefile.am
 delete mode 100644 makefile.am
 create mode 100644 omx/Makefile.am
 delete mode 100644 omx/makefile.am

diff --git a/Makefile.am b/Makefile.am
new file mode 100644
index 0000000..fef88de
--- /dev/null
+++ b/Makefile.am
@@ -0,0 +1,5 @@
+
+AUTOMAKE_OPTIONS=foreign
+SUBDIRS =omx
+
+
diff --git a/autogen.sh b/autogen.sh
index 06e1f95..908ccb2 100755
--- a/autogen.sh
+++ b/autogen.sh
@@ -1,8 +1,107 @@
-#!/bin/bash
-aclocal
-autoconf
-autoheader
-libtoolize --automake
-automake --add-missing
-./configure --host=arm-linux-gnueabihf  --prefix=$(pwd)/out
+#!/bin/sh
+# Run this to generate all the initial makefiles, etc.
 
+DIE=0
+package=gst-omx
+srcfile=omx/gstomx.c
+
+# Make sure we have common
+if test ! -f common/gst-autogen.sh;
+then
+  echo "+ Setting up common submodule"
+  git submodule init
+fi
+git submodule update
+
+# source helper functions
+if test ! -f common/gst-autogen.sh;
+then
+  echo There is something wrong with your source tree.
+  echo You are missing common/gst-autogen.sh
+  exit 1
+fi
+. common/gst-autogen.sh
+
+# install pre-commit hook for doing clean commits
+if test ! \( -x .git/hooks/pre-commit -a -L .git/hooks/pre-commit \);
+then
+    rm -f .git/hooks/pre-commit
+    ln -s ../../common/hooks/pre-commit.hook .git/hooks/pre-commit
+fi
+
+
+CONFIGURE_DEF_OPT='--enable-maintainer-mode --enable-gtk-doc'
+
+autogen_options $@
+
+printf "+ check for build tools"
+if test ! -z "$NOCHECK"; then echo " skipped"; else  echo; fi
+version_check "autoconf" "$AUTOCONF autoconf autoconf270 autoconf269 autoconf268 autoconf267 autoconf266 autoconf265 autoconf264 autoconf263 autoconf262 autoconf261 autoconf260" \
+              "ftp://ftp.gnu.org/pub/gnu/autoconf/" 2 60 || DIE=1
+version_check "automake" "$AUTOMAKE automake automake-1.11 automake-1.10" \
+              "ftp://ftp.gnu.org/pub/gnu/automake/" 1 10 || DIE=1
+version_check "libtoolize" "$LIBTOOLIZE libtoolize glibtoolize" \
+              "ftp://ftp.gnu.org/pub/gnu/libtool/" 1 5 0 || DIE=1
+version_check "pkg-config" "" \
+              "http://www.freedesktop.org/software/pkgconfig" 0 8 0 || DIE=1
+
+die_check $DIE
+
+aclocal_check || DIE=1
+autoheader_check || DIE=1
+
+die_check $DIE
+
+# if no arguments specified then this will be printed
+if test -z "$*"; then
+  echo "+ checking for autogen.sh options"
+  echo "  This autogen script will automatically run ./configure as:"
+  echo "  ./configure $CONFIGURE_DEF_OPT"
+  echo "  To pass any additional options, please specify them on the $0"
+  echo "  command line."
+fi
+
+toplevel_check $srcfile
+
+tool_run "$libtoolize" "--copy --force"
+tool_run "$aclocal" "-I m4 -I common/m4 $ACLOCAL_FLAGS"
+tool_run "$autoheader"
+
+# touch the stamp-h.in build stamp so we don't re-run autoheader in maintainer mode
+echo timestamp > stamp-h.in 2> /dev/null
+
+tool_run "$autoconf"
+tool_run "$automake" "-a -c"
+
+# if enable exists, add an -enable option for each of the lines in that file
+if test -f enable; then
+  for a in `cat enable`; do
+    CONFIGURE_FILE_OPT="--enable-$a"
+  done
+fi
+
+# if disable exists, add an -disable option for each of the lines in that file
+if test -f disable; then
+  for a in `cat disable`; do
+    CONFIGURE_FILE_OPT="$CONFIGURE_FILE_OPT --disable-$a"
+  done
+fi
+
+test -n "$NOCONFIGURE" && {
+  echo "+ skipping configure stage for package $package, as requested."
+  echo "+ autogen.sh done."
+  exit 0
+}
+
+echo "+ running configure ... "
+test ! -z "$CONFIGURE_DEF_OPT" && echo "  ./configure default flags: $CONFIGURE_DEF_OPT"
+test ! -z "$CONFIGURE_EXT_OPT" && echo "  ./configure external flags: $CONFIGURE_EXT_OPT"
+test ! -z "$CONFIGURE_FILE_OPT" && echo "  ./configure enable/disable flags: $CONFIGURE_FILE_OPT"
+echo
+
+./configure $CONFIGURE_DEF_OPT $CONFIGURE_EXT_OPT $CONFIGURE_FILE_OPT || {
+        echo "  configure failed"
+        exit 1
+}
+
+echo "Now type 'make' to compile $package."
diff --git a/configure.ac b/configure.ac
index ba92a96..be519c5 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,49 +1,468 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
 AC_PREREQ([2.68])
-AC_INIT(vxd395lib,0.01,lh04@163.com)
-AM_INIT_AUTOMAKE
+
+dnl please read gstreamer/docs/random/autotools before changing this file
+
+dnl initialize autoconf
+dnl releases only do -Wall, git and prerelease does -Werror too
+dnl use a three digit version number for releases, and four for git/pre
+AC_INIT(GStreamer CSR Plug-ins, 1.2.0,
+        http://www.csr.com,
+        gst-omx)
+
+AG_GST_INIT
+
+dnl initialize automake
+AM_INIT_AUTOMAKE([-Wno-portability 1.11 no-dist-gzip dist-xz tar-ustar subdir-objects])
+
+dnl define PACKAGE_VERSION_* variables
+AS_VERSION
+
+dnl check if this is a release version
+AS_NANO(GST_GIT="no", GST_GIT="yes")
+
+dnl can autoconf find the source ?
 AC_CONFIG_SRCDIR([omx/gstomx.c])
+
+dnl define the output header for config
 AC_CONFIG_HEADERS([config.h])
+dnl Check for pkgconfig first
+AC_CHECK_PROG(HAVE_PKGCONFIG, pkg-config, yes, no)
+
+dnl Give error and exit if we don't have pkgconfig
+if test "x$HAVE_PKGCONFIG" = "xno"; then
+  AC_MSG_ERROR(you need to have pkgconfig installed !)
+fi
+
+dnl AM_MAINTAINER_MODE only provides the option to configure to enable it
+AM_MAINTAINER_MODE([enable])
+
+dnl sets host_* variables
+AC_CANONICAL_HOST
+
+dnl use pretty build output with automake >= 1.11
+m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])],
+  [AM_DEFAULT_VERBOSITY=1
+   AC_SUBST(AM_DEFAULT_VERBOSITY)])
+
+dnl our libraries and install dirs use GST_API_VERSION in the filename
+dnl to allow side-by-side installation of different API versions
+GST_API_VERSION=1.0
+AC_SUBST(GST_API_VERSION)
+AC_DEFINE_UNQUOTED(GST_API_VERSION, "$GST_API_VERSION",
+  [GStreamer API Version])
+
+AG_GST_LIBTOOL_PREPARE
+AS_LIBTOOL(GST, 0, 0, 0)
+
+dnl *** required versions of GStreamer stuff ***
+GST_REQ=1.2.2
+
+dnl *** autotools stuff ****
+
+dnl allow for different autotools
+AS_AUTOTOOLS_ALTERNATE
+
+dnl Add parameters for aclocal
+AC_SUBST(ACLOCAL_AMFLAGS, "-I m4 -I common/m4")
+
+dnl set up gettext
+dnl the version check needs to stay here because autopoint greps for it
+AM_GNU_GETTEXT_VERSION([0.17])
+AG_GST_GETTEXT([gst-omx-$GST_API_VERSION])
+
+dnl *** check for arguments to configure ***
+
+AG_GST_ARG_DISABLE_FATAL_WARNINGS
+
+AG_GST_ARG_DEBUG
+AG_GST_ARG_PROFILING
+AG_GST_ARG_VALGRIND
+AG_GST_ARG_GCOV
+
+AG_GST_ARG_EXAMPLES
 
-# Checks for programs.
-AC_PROG_CXX
+AG_GST_ARG_WITH_PKG_CONFIG_PATH
+AG_GST_ARG_WITH_PACKAGE_NAME
+AG_GST_ARG_WITH_PACKAGE_ORIGIN
+
+AG_GST_PKG_CONFIG_PATH
+
+AG_GST_ARG_WITH_PLUGINS
+
+AG_GST_ARG_ENABLE_EXPERIMENTAL
+
+dnl *** checks for platform ***
+
+dnl * hardware/architecture *
+
+dnl common/m4/gst-arch.m4
+dnl check CPU type
+AG_GST_ARCH
+
+dnl Determine endianness
+AC_C_BIGENDIAN
+
+dnl *** checks for programs ***
+
+dnl find a compiler
 AC_PROG_CC
-AC_PROG_LIBTOOL
-# Checks for libraries.
-# FIXME: Replace `main' with a function in `-lpthread':
-AC_CHECK_LIB([pthread], [main])
-
-# Checks for header files.
-AC_CHECK_HEADERS([fcntl.h limits.h memory.h netdb.h stddef.h stdint.h stdlib.h string.h strings.h sys/ioctl.h sys/socket.h sys/time.h unistd.h wchar.h])
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_HEADER_STDBOOL
-AC_C_INLINE
-AC_TYPE_INT16_T
-AC_TYPE_INT32_T
-AC_TYPE_INT64_T
-AC_TYPE_INT8_T
-AC_TYPE_OFF_T
-AC_TYPE_PID_T
-AC_TYPE_SIZE_T
-AC_TYPE_SSIZE_T
-AC_TYPE_UINT16_T
-AC_TYPE_UINT32_T
-AC_TYPE_UINT64_T
-AC_TYPE_UINT8_T
-AC_CHECK_TYPES([ptrdiff_t])
-
-# Checks for library functions.
-AC_FUNC_ERROR_AT_LINE
-AC_FUNC_MALLOC
+AC_PROG_CC_STDC
+
+dnl check if the compiler supports '-c' and '-o' options
+AM_PROG_CC_C_O
+
+AC_PATH_PROG(VALGRIND_PATH, valgrind, no)
+AM_CONDITIONAL(HAVE_VALGRIND, test ! "x$VALGRIND_PATH" = "xno")
+
+dnl check for documentation tools
+GTK_DOC_CHECK([1.3])
+AS_PATH_PYTHON([2.1])
+AG_GST_PLUGIN_DOCS([1.3],[2.1])
+
+dnl *** checks for libraries ***
+
+dnl libm, for sin() etc.
+LT_LIB_M
+AC_SUBST(LIBM)
+
+dnl *** checks for header files ***
+
+dnl check if we have ANSI C header files
+AC_HEADER_STDC
+
+dnl *** checks for types/defines ***
+
+dnl Check for FIONREAD ioctl declaration.  This check is needed
+dnl for the UDP plugin to build on Solaris
+GST_CHECK_FIONREAD
+
+dnl *** checks for structures ***
+
+dnl *** checks for compiler characteristics ***
+
+dnl check if we have GCC inline-asm
+AS_GCC_INLINE_ASSEMBLY([HAVE_GCC_ASM=yes], [HAVE_GCC_ASM=no])
+if test x$HAVE_GCC_ASM = xyes ; then
+  AC_DEFINE(HAVE_GCC_ASM, 1,
+    [Define if compiler supports gcc inline assembly])
+fi
+AM_CONDITIONAL(HAVE_GCC_ASM, test "x$HAVE_GCC_ASM" = "xyes")
+
+dnl *** checks for library functions ***
+
+LIBS_SAVE=$LIBS
+LIBS="$LIBS $LIBM"
+AC_CHECK_FUNCS(rint sinh cosh asinh fpclass)
+LIBS=$LIBS_SAVE
+
+dnl Check whether isinf() is defined by math.h
+AC_CACHE_CHECK([for isinf], ac_cv_have_isinf,
+    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]], [[float f = 0.0; int i=isinf(f)]])],[ac_cv_have_isinf="yes"],[ac_cv_have_isinf="no"]))
+if test "$ac_cv_have_isinf" = "yes"
+then
+    AC_DEFINE(HAVE_ISINF, 1, [Define to 1 if you have the `isinf' function.])
+fi
+
+dnl Check for mmap (needed by electricfence plugin)
 AC_FUNC_MMAP
-AC_FUNC_REALLOC
-AC_CHECK_FUNCS([atexit clock_gettime getpagesize gettimeofday memset mkdir munmap socket sqrt strcasecmp strchr strcspn strdup strerror strncasecmp strpbrk strrchr strstr strtol strtoul strtoull])
+AM_CONDITIONAL(GST_HAVE_MMAP, test "x$ac_cv_func_mmap_fixed_mapped" = "xyes")
+
+dnl Check for mmap (needed by electricfence plugin)
+
+AC_CHECK_TYPE([struct ip_mreqn], [
+              AC_DEFINE(HAVE_IP_MREQN,, [Define if we have struct ip_mreqn])],,
+              [#include <netinet/in.h>])
+
+dnl *** checks for dependency libraries ***
+
+
+dnl GLib
+GLIB_REQ=2.32.0
+AG_GST_GLIB_CHECK([$GLIB_REQ])
+
+dnl Orc
+ORC_CHECK([0.4.17])
+
+dnl checks for gstreamer
+dnl uninstalled is selected preferentially -- see pkg-config(1)
+AG_GST_CHECK_GST($GST_API_VERSION, [$GST_REQ], yes)
+AG_GST_CHECK_GST_BASE($GST_API_VERSION, [$GST_REQ], yes)
+AG_GST_CHECK_GST_CONTROLLER($GST_API_VERSION, [$GST_REQ], yes)
+AG_GST_CHECK_GST_CHECK($GST_API_VERSION, [$GST_REQ], no)
+AG_GST_CHECK_GST_PLUGINS_BASE($GST_API_VERSION, [$GST_REQ], yes)
+
+GST_TOOLS_DIR=`$PKG_CONFIG --variable=toolsdir gstreamer-$GST_API_VERSION`
+if test -z $GST_TOOLS_DIR; then
+  AC_MSG_ERROR([no tools dir defined in GStreamer pkg-config file; core upgrade needed.])
+fi
+AC_SUBST(GST_TOOLS_DIR)
+
+AC_MSG_NOTICE(Using GStreamer Core Plugins in $GST_PLUGINS_DIR)
+AC_MSG_NOTICE(Using GStreamer Base Plugins in $GSTPB_PLUGINS_DIR)
+
+AM_CONDITIONAL(HAVE_GST_CHECK, test "x$HAVE_GST_CHECK" = "xyes")
+PKG_CHECK_MODULES([GST_GL], [gstreamer-gl-1.0 >= 1.4.0], [
+  AC_DEFINE(HAVE_GST_GL, 1, [Have gstreamer-gl])
+  GST_GL=yes
+], [GST_GL=no])
+AM_CONDITIONAL(HAVE_GST_GL, test "x$GST_GL" = "xyes")
+
+dnl Check for documentation xrefs
+GLIB_PREFIX="`$PKG_CONFIG --variable=prefix glib-2.0`"
+GST_PREFIX="`$PKG_CONFIG --variable=prefix gstreamer-$GST_API_VERSION`"
+GSTPB_PREFIX="`$PKG_CONFIG --variable=prefix gstreamer-plugins-base-$GST_API_VERSION`"
+AC_SUBST(GLIB_PREFIX)
+AC_SUBST(GST_PREFIX)
+AC_SUBST(GSTPB_PREFIX)
+
+AC_ARG_WITH([omx-header-path],
+            AS_HELP_STRING([--with-omx-header-path],[path of external OpenMAX IL header files]),
+        [omx_header_path="$withval"], [omx_header_path="none"])
+
+if test x"$omx_header_path" != x"none"; then
+    CPPFLAGS="$CPPFLAGS -I$omx_header_path"
+fi
+dnl Check for external OpenMAX IL headers
+AC_CHECK_HEADER([OMX_Core.h], [HAVE_EXTERNAL_OMX=yes], [HAVE_EXTERNAL_OMX=no], [AC_INCLUDES_DEFAULT])
+AM_CONDITIONAL(HAVE_EXTERNAL_OMX, test "x$HAVE_EXTERNAL_OMX" = "xyes")
+
+dnl Our internal OpenMAX IL headers have OMX_VideoExt.h
+HAVE_VIDEO_EXT=yes
+if test "x$HAVE_EXTERNAL_OMX" = "xyes"; then
+    AC_CHECK_HEADER([OMX_VideoExt.h], [HAVE_VIDEO_EXT=yes], [HAVE_VIDEO_EXT=no], [AC_INCLUDES_DEFAULT])
+fi
+
+VIDEO_HEADERS="#include <OMX_Video.h>"
+if test "x$HAVE_VIDEO_EXT" = "xyes"; then
+    AC_DEFINE(HAVE_VIDEO_EXT, 1, [OpenMAX IL has OMX_VideoExt.h header])
+    VIDEO_HEADERS="$VIDEO_HEADERS
+#include <OMX_VideoExt.h>
+"
+fi
+
+AC_CHECK_DECLS([OMX_VIDEO_CodingVP8],
+  [
+    AC_DEFINE(HAVE_VP8, 1, [OpenMAX IL has VP8 support])
+    HAVE_VP8=yes
+  ], [
+    HAVE_VP8=no
+  ], [[$VIDEO_HEADERS]])
+AM_CONDITIONAL(HAVE_VP8, test "x$HAVE_VP8" = "xyes")
+
+AC_CHECK_DECLS([OMX_VIDEO_CodingTheora],
+  [
+    AC_DEFINE(HAVE_THEORA, 1, [OpenMAX IL has Theora support])
+    HAVE_THEORA=yes
+  ], [
+    HAVE_THEORA=no
+  ], [[$VIDEO_HEADERS]])
+AM_CONDITIONAL(HAVE_THEORA, test "x$HAVE_THEORA" = "xyes")
+
+dnl Check for -Bsymbolic-functions linker flag used to avoid
+dnl intra-library PLT jumps, if available.
+AC_ARG_ENABLE(Bsymbolic,
+              [AC_HELP_STRING([--disable-Bsymbolic],
+                              [avoid linking with -Bsymbolic])],,
+              [SAVED_LDFLAGS="${LDFLAGS}"
+               AC_MSG_CHECKING([for -Bsymbolic-functions linker flag])
+               LDFLAGS=-Wl,-Bsymbolic-functions
+               AC_TRY_LINK([], [int main (void) { return 0; }],
+                           AC_MSG_RESULT(yes)
+                           enable_Bsymbolic=yes,
+                           AC_MSG_RESULT(no)
+                           enable_Bsymbolic=no)
+               LDFLAGS="${SAVED_LDFLAGS}"])
+
+dnl set license and copyright notice
+GST_LICENSE="LGPL"
+AC_DEFINE_UNQUOTED(GST_LICENSE, "$GST_LICENSE", [GStreamer license])
+AC_SUBST(GST_LICENSE)
+
+dnl set location of plugin directory
+AG_GST_SET_PLUGINDIR
+
+dnl set release date/time
+AG_GST_SET_PACKAGE_RELEASE_DATETIME_WITH_NANO([$PACKAGE_VERSION_NANO],
+  ["${srcdir}/gst-omx.doap"],
+  [$PACKAGE_VERSION_MAJOR.$PACKAGE_VERSION_MINOR.$PACKAGE_VERSION_MICRO])
+
+dnl build static plugins or not
+AC_MSG_CHECKING([whether to build static plugins or not])
+AC_ARG_ENABLE(
+  static-plugins,
+  AC_HELP_STRING(
+    [--enable-static-plugins],
+    [build static plugins @<:@default=no@:>@]),
+  [AS_CASE(
+    [$enableval], [no], [], [yes], [],
+    [AC_MSG_ERROR([bad value "$enableval" for --enable-static-plugins])])],
+  [enable_static_plugins=no])
+AC_MSG_RESULT([$enable_static_plugins])
+if test "x$enable_static_plugins" = xyes; then
+  AC_DEFINE(GST_PLUGIN_BUILD_STATIC, 1,
+    [Define if static plugins should be built])
+  GST_PLUGIN_LIBTOOLFLAGS=""
+else
+  GST_PLUGIN_LIBTOOLFLAGS="--tag=disable-static"
+fi
+AC_SUBST(GST_PLUGIN_LIBTOOLFLAGS)
+AM_CONDITIONAL(GST_PLUGIN_BUILD_STATIC, test "x$enable_static_plugins" = "xyes")
+
+# set by AG_GST_PARSE_SUBSYSTEM_DISABLES above
+dnl make sure it doesn't complain about unused variables if debugging is disabled
+NO_WARNINGS=""
+AG_GST_CHECK_GST_DEBUG_DISABLED([NO_WARNINGS="-Wno-unused"], [NO_WARNINGS=""])
+
+dnl define an ERROR_CFLAGS Makefile variable
+dnl -Wundef: too many broken headers
+AG_GST_SET_ERROR_CFLAGS($FATAL_WARNINGS, [
+      -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls
+      -Wwrite-strings -Wold-style-definition -Waggregate-return
+      -Winit-self -Wmissing-include-dirs -Waddress -Wno-multichar
+      -Wnested-externs $NO_WARNINGS])
+
+dnl define an ERROR_CXXFLAGS Makefile variable
+AG_GST_SET_ERROR_CXXFLAGS($FATAL_WARNINGS, [
+        -Wmissing-declarations -Wredundant-decls
+        -Wwrite-strings
+        -Winit-self -Wmissing-include-dirs -Waddress -Wno-multichar
+        $NO_WARNINGS])
+
+dnl define an ERROR_OBJCFLAGS Makefile variable
+AG_GST_SET_ERROR_OBJCFLAGS($FATAL_WARNINGS, [
+      -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls
+      -Wwrite-strings -Wold-style-definition
+      -Winit-self -Wmissing-include-dirs -Wno-multichar
+      -Wnested-externs $NO_WARNINGS])
+
+dnl define correct level for debugging messages
+AG_GST_SET_LEVEL_DEFAULT($GST_GIT)
+
+dnl used in examples
+AG_GST_DEFAULT_ELEMENTS
+
+dnl *** plug-ins to include ***
+
+dnl these are all the gst plug-ins, compilable without additional libs
+AG_GST_CHECK_PLUGIN(omx)
+
+if test "x$HAVE_IOS" = "xyes"; then
+  AC_DEFINE(HAVE_IOS, 1, [building for iOS platofrm])
+fi
+AM_CONDITIONAL(HAVE_IOS, test "x$HAVE_IOS" = "xyes")
+
+
+dnl *** finalize CFLAGS, LDFLAGS, LIBS
+
+dnl Overview:
+dnl GST_OPTION_CFLAGS:  common flags for profiling, debugging, errors, ...
+dnl GST_*:              flags shared by all built objects
+dnl GST_ALL_LDFLAGS:    linker flags shared by all
+dnl GST_LIB_LDFLAGS:    not needed, we don't install libraries
+dnl GST_LT_LDFLAGS:     library versioning of our libraries
+dnl GST_PLUGIN_LDFLAGS: flags to be used for all plugins
+
+dnl GST_OPTION_CFLAGS
+if test "x$USE_DEBUG" = xyes; then
+   PROFILE_CFLAGS="-g"
+fi
+AC_SUBST(PROFILE_CFLAGS)
+
+if test "x$PACKAGE_VERSION_NANO" = "x1"; then
+  dnl Define _only_ for git (not pre-releases or releases)
+  DEPRECATED_CFLAGS="-DGST_DISABLE_DEPRECATED"
+else
+  DEPRECATED_CFLAGS=""
+fi
+AC_SUBST(DEPRECATED_CFLAGS)
+
+dnl every flag in GST_OPTION_CFLAGS, GST_OPTION_CXXFLAGS and GST_OPTION_OBJCFLAGS can be overridden
+dnl at make time with e.g. make ERROR_CFLAGS=""
+GST_OPTION_CFLAGS="\$(WARNING_CFLAGS) \$(ERROR_CFLAGS) \$(DEBUG_CFLAGS) \$(PROFILE_CFLAGS) \$(GCOV_CFLAGS) \$(OPT_CFLAGS) \$(DEPRECATED_CFLAGS)"
+GST_OPTION_CXXFLAGS="\$(WARNING_CXXFLAGS) \$(ERROR_CXXFLAGS) \$(DEBUG_CFLAGS) \$(PROFILE_CFLAGS) \$(GCOV_CFLAGS) \$(OPT_CFLAGS) \$(DEPRECATED_CFLAGS)"
+GST_OPTION_OBJCFLAGS="\$(WARNING_OBJCFLAGS) \$(ERROR_OBJCFLAGS) \$(DEBUG_CFLAGS) \$(PROFILE_CFLAGS) \$(GCOV_CFLAGS) \$(OPT_CFLAGS) \$(DEPRECATED_CFLAGS)"
+AC_SUBST(GST_OPTION_CFLAGS)
+AC_SUBST(GST_OPTION_CXXFLAGS)
+AC_SUBST(GST_OPTION_OBJCFLAGS)
+
+dnl our libraries need to be versioned correctly
+AC_SUBST(GST_LT_LDFLAGS)
+
+dnl FIXME: do we want to rename to GST_ALL_* ?
+dnl prefer internal headers to already installed ones
+dnl also add builddir include for enumtypes and marshal
+dnl add ERROR_CFLAGS, but overridable
+GST_CFLAGS="$GST_CFLAGS -DGST_USE_UNSTABLE_API"
+GST_CXXFLAGS="-I\$(top_srcdir)/gst-libs $GST_CFLAGS $GLIB_EXTRA_CFLAGS \$(GST_OPTION_CXXFLAGS)"
+GST_OBJCFLAGS="-I\$(top_srcdir)/gst-libs $GST_CFLAGS $GLIB_EXTRA_CFLAGS \$(GST_OPTION_OBJCFLAGS)"
+GST_CFLAGS="-I\$(top_srcdir)/gst-libs $GST_CFLAGS $GLIB_EXTRA_CFLAGS \$(GST_OPTION_CFLAGS)"
+AC_SUBST(GST_CFLAGS)
+AC_SUBST(GST_CXXFLAGS)
+AC_SUBST(GST_OBJCFLAGS)
+AC_SUBST(GST_LIBS)
+
+dnl LDFLAGS really should only contain flags, not libs - they get added before
+dnl whatevertarget_LIBS and -L flags here affect the rest of the linking
+GST_ALL_LDFLAGS="-no-undefined"
+if test "x${enable_Bsymbolic}" = "xyes"; then
+  GST_ALL_LDFLAGS="$GST_ALL_LDFLAGS -Wl,-Bsymbolic-functions"
+fi
+AC_SUBST(GST_ALL_LDFLAGS)
+
+dnl this really should only contain flags, not libs - they get added before
+dnl whatevertarget_LIBS and -L flags here affect the rest of the linking
+GST_PLUGIN_LDFLAGS="-module -avoid-version -export-symbols-regex '^[_]*gst_plugin_.*' $GST_ALL_LDFLAGS"
+AC_SUBST(GST_PLUGIN_LDFLAGS)
+
+dnl *** output files ***
+
+AC_CONFIG_FILES(
+Makefile
+omx/Makefile
+)
+
+dnl Create the config.h file for Visual Studio builds
+dnl Beware of spaces and /'s in some of the shell variable contents.
+sed \
+    -e 's/.*config.h.in.*autoheader.*/\/* Autogenerated config.h created for win32 Visual Studio builds *\/\n\n\/* PREFIX -- specifically added for Windows for easier moving *\/\n#define PREFIX "C:\\\\gstreamer"\n\n#define GST_INSTALL_PLUGINS_HELPER PREFIX "\\\\libexec\\\\gst-install-plugins-helper.exe"/' \
+    -e 's/.* GETTEXT_PACKAGE$/#define GETTEXT_PACKAGE "'$GETTEXT_PACKAGE'"/' \
+    -e 's/.* GST_DATADIR$/#define GST_DATADIR PREFIX "\\\\share"/' \
+    -e 's/.* GST_LEVEL_DEFAULT$/#define GST_LEVEL_DEFAULT GST_LEVEL_ERROR/' \
+    -e 's/.* GST_LICENSE$/#define GST_LICENSE "'$GST_LICENSE'"/' \
+    -e 's/.* GST_API_VERSION$/#define GST_API_VERSION "'$GST_API_VERSION'"/' \
+    -e "s,.* GST_PACKAGE_NAME$,#define GST_PACKAGE_NAME \"${GST_PACKAGE_NAME}\"," \
+    -e 's/.* GST_PACKAGE_ORIGIN$/#define GST_PACKAGE_ORIGIN "Unknown package origin"/' \
+    -e "s,.* GST_PACKAGE_RELEASE_DATETIME$,#define GST_PACKAGE_RELEASE_DATETIME \"${GST_PACKAGE_RELEASE_DATETIME}\"," \
+    -e 's/.* HAVE_CPU_I386$/#define HAVE_CPU_I386 1/' \
+    -e 's/.* HAVE_FGETPOS$/#define HAVE_FGETPOS 1/' \
+    -e 's/.* HAVE_FSETPOS$/#define HAVE_FSETPOS 1/' \
+    -e 's/.* HAVE_LIBXML2$/#define HAVE_LIBXML2 1/' \
+    -e 's/.* HAVE_PROCESS_H$/#define HAVE_PROCESS_H 1/' \
+    -e 's/.* HAVE_STDLIB_H$/#define HAVE_STDLIB_H 1/' \
+    -e 's/.* HAVE_STRING_H$/#define HAVE_STRING_H 1/' \
+    -e 's/.* HAVE_SYS_STAT_H$/#define HAVE_SYS_STAT_H 1/' \
+    -e 's/.* HAVE_SYS_TYPES_H$/#define HAVE_SYS_TYPES_H 1/' \
+    -e 's/.* HAVE_WIN32$/#define HAVE_WIN32 1/' \
+    -e 's/.* HOST_CPU$/#define HOST_CPU "i686"/' \
+    -e 's/.* LIBDIR$/#ifdef _DEBUG\n#  define LIBDIR PREFIX "\\\\debug\\\\lib"\n#else\n#  define LIBDIR PREFIX "\\\\lib"\n#endif/' \
+    -e 's/.* LOCALEDIR$/#define LOCALEDIR PREFIX "\\\\share\\\\locale"/' \
+    -e "s/.* PACKAGE$/#define PACKAGE \"$PACKAGE\"/" \
+    -e 's/.* PACKAGE_BUGREPORT$/#define PACKAGE_BUGREPORT "http:\/\/bugzilla.gnome.org\/enter_bug.cgi?product=GStreamer"/' \
+    -e "s/.* PACKAGE_NAME$/#define PACKAGE_NAME \"$PACKAGE_NAME\"/" \
+    -e "s/.* PACKAGE_STRING$/#define PACKAGE_STRING \"$PACKAGE_STRING\"/" \
+    -e 's/.* PACKAGE_TARNAME$/#define PACKAGE_TARNAME "'$PACKAGE_TARNAME'"/' \
+    -e 's/.* PACKAGE_VERSION$/#define PACKAGE_VERSION "'$PACKAGE_VERSION'"/' \
+    -e 's/.* PLUGINDIR$/#ifdef _DEBUG\n#  define PLUGINDIR PREFIX "\\\\debug\\\\lib\\\\gstreamer-0.11"\n#else\n#  define PLUGINDIR PREFIX "\\\\lib\\\\gstreamer-0.11"\n#endif/' \
+    -e 's/.* USE_BINARY_REGISTRY$/#define USE_BINARY_REGISTRY/' \
+    -e 's/.* VERSION$/#define VERSION "'$VERSION'"/' \
+    -e "s/.* DEFAULT_AUDIOSINK$/#define DEFAULT_AUDIOSINK \"directsoundsink\"/" \
+    -e "s/.* DEFAULT_AUDIOSRC$/#define DEFAULT_AUDIOSRC \"audiotestsrc\"/" \
+    -e "s/.* DEFAULT_VIDEOSRC$/#define DEFAULT_VIDEOSRC \"videotestsrc\"/" \
+    -e "s/.* DEFAULT_VISUALIZER$/#define DEFAULT_VISUALIZER \"goom\"/" \
+    config.h.in >win32/common/config.h-new
 
-AC_OUTPUT([makefile
-        omx/makefile
-	])
+AC_OUTPUT
 
+AG_GST_OUTPUT_PLUGINS
+ORC_OUTPUT
 
diff --git a/makefile.am b/makefile.am
deleted file mode 100644
index fef88de..0000000
--- a/makefile.am
+++ /dev/null
@@ -1,5 +0,0 @@
-
-AUTOMAKE_OPTIONS=foreign
-SUBDIRS =omx
-
-
diff --git a/omx/Makefile.am b/omx/Makefile.am
new file mode 100644
index 0000000..b16799e
--- /dev/null
+++ b/omx/Makefile.am
@@ -0,0 +1,60 @@
+plugin_LTLIBRARIES = libgstomx.la
+
+libgstomx_la_SOURCES = gstomx.c  \
+      gstomxh263dec.c   \
+      gstomxh264dec.c   \
+      gstomxmjpegdec.c    \
+      gstomxmpeg2videodec.c \
+      gstomxmpeg4videodec.c \
+      gstomxrealvideodec.c  \
+      gstomxbufferpool.c \
+      gstomxvideo.c \
+      gstomxvideodec.c  \
+      gstomxvp8dec.c  \
+      gstomxvp6dec.c  \
+      gstomxwmvdec.c  \
+      gstomxavsdec.c  \
+      gstomxsorensondec.c
+
+
+libgstomx_la_CFLAGS = $(GST_PLUGINS_BASE_CFLAGS) $(GST_BASE_CFLAGS) $(GST_CFLAGS) -I openmax
+libgstomx_la_CXXFLAGS = $(GST_PLUGINS_BASE_CFLAGS) $(GST_BASE_CFLAGS) $(GST_CXXFLAGS)
+libgstomx_la_LIBADD = \
+	$(GST_PLUGINS_BASE_LIBS) \
+	$(GST_BASE_LIBS) \
+	$(GST_LIBS) \
+	$(GLIB_LIBS)
+
+libgstomx_la_LDFLAGS = $(GST_PLUGIN_LDFLAGS) -lgstvideo-@GST_API_VERSION@
+
+libgstomx_la_LIBTOOLFLAGS = --tag=disable-static
+
+GST_CFLAGS += -fPIC -DPIC -DVDEC -DUSE_SHARING -DHAS_AVS -DHAS_H264 -DHAS_MPEG4 -DHAS_VP6 -DHAS_VP8 -DHAS_JPEG -DHAS_MPEG2 -DHAS_REAL -DHAS_VC1 \
+							-DVDEC_MSVDX_HARDWARE -DFAKE_DEVIF -DSYSBRG_BRIDGING -DUSE_FW_CTX_TRIMMING \
+							-DENABLE_NULL_DEVIF -DUSE_REAL_FW -DOMX_SHARED -D__OMX_EXPORTS -D__PORT_FWRK__  -DPORTFWRK_NO_UMISR \
+							-DUSE_FW_RELOC_INFO_PACKING -DVDEC_BRIDGING -DSECURE_USE_SYSOS -DBSPP_UM
+
+noinst_HEADERS = \
+  gstomx.h \
+  gstomxbufferpool.h \
+  gstomxvideo.h \
+  gstomxvideodec.h \
+  gstomxvideoenc.h \
+  gstomxaudiodec.h \
+  gstomxaudioenc.h \
+  gstomxmjpegdec.h \
+  gstomxmpeg2videodec.h \
+  gstomxmpeg4videodec.h \
+  gstomxh264dec.h \
+  gstomxh263dec.h \
+  gstomxwmvdec.h \
+  gstomxmpeg4videoenc.h \
+  gstomxh264enc.h \
+  gstomxh263enc.h \
+  gstomxaacdec.h \
+  gstomxmp3dec.h \
+  gstomxaacenc.h \
+  gstomxaudiosink.h \
+  gstomxanalogaudiosink.h \
+  gstomxhdmiaudiosink.h
+
diff --git a/omx/makefile.am b/omx/makefile.am
deleted file mode 100644
index 296f90b..0000000
--- a/omx/makefile.am
+++ /dev/null
@@ -1,57 +0,0 @@
-TOP_DIR = $(shell pwd)
-IMG_VIDEO = $(TOP_DIR)/../../imgvideo
-export VDEC_TOP = $(TOP_DIR)/..
-
-#GSTOMX_CFLAGS = -DSECURE_MEDIA_REPORTING -DVDEC_TARGET_IMG_FPGA -D_FILE_OFFSET_BITS=64 
-
-GST_COM_CFLAGS = -fPIC -DPIC -DVDEC -DUSE_SHARING -DHAS_AVS -DHAS_H264 -DHAS_MPEG4 -DHAS_VP6 -DHAS_VP8 -DHAS_JPEG -DHAS_MPEG2 -DHAS_REAL -DHAS_VC1 \
-	-DVDEC_MSVDX_HARDWARE -DFAKE_DEVIF -DSYSBRG_BRIDGING -DUSE_FW_CTX_TRIMMING \
-	-DENABLE_NULL_DEVIF -DUSE_REAL_FW -DOMX_SHARED -D__OMX_EXPORTS -D__PORT_FWRK__  -DPORTFWRK_NO_UMISR	\
-	-DUSE_FW_RELOC_INFO_PACKING -DVDEC_BRIDGING -DSECURE_USE_SYSOS -DBSPP_UM 
-
-gst_omx_CFLAGS = -DGST_OMX_EXPORTS -DHAS_GSTREAMER -DHAVE_CONFIG_H -DIMG_DEBUG_FLAG -DIMG_MEM_LEAK_TRACK_ENABLED -DOMX_SHARED 
-
-libGST_OMXincludedir = -I gst-omx/include	\
-		-I gst-omx/include/openmax \
-		-I $(TOP_DIR)/../../../gstreamer-custom \
-		-I $(TOP_DIR)/../../../gstreamer-custom/win32/ \
-		-I $(TOP_DIR)/../../../gstreamer-custom/libs/ \
-		-I $(TOP_DIR)/../../../gst-plugins-base-custom/gst-libs \
-		-I $(TOP_DIR)/../../../gst-plugins-base-custom/win32 \
-		-L$(TOP_DIR)/../../../gst-plugins-base-custom/gst-libs/gst/video \
-		-L$(TOP_DIR)/../../../gst-plugins-base-custom/gst-libs/gst/video/.libs/ \
-		-L$(TOP_DIR)/../../../gst-plugins-base-custom/gst-libs/gst/audio/.libs/ \
-		-L$(TOP_DIR)/../../../gst-plugins-base-custom/gst-libs/gst/pbutils/.libs/ \
-		-I $(TOP_DIR)/../../../libs/libxml2-2.9.1/include \
-		-I $(TOP_DIR)/../../../libglib2-2.38.2/ \
-		-I $(TOP_DIR)/../../../libglib2-2.38.2/glib \
-		-I $(TOP_DIR)/../../../libglib2-2.38.2/gmodule \
-		-I openmax \
-		-I $(SYSROOT_DIR)/usr/include/gstreamer-1.0 \
-		-I $(SYSROOT_DIR)/usr/include/glib-2.0 \
-		-I $(SYSROOT_DIR)/usr/lib/glib-2.0/include
-
-libGST_OMX_la_SOURCES=	\
-			gstomx.c	\
-			gstomxh263dec.c		\
-			gstomxh264dec.c		\
-			gstomxmjpegdec.c		\
-			gstomxmpeg2videodec.c	\
-			gstomxmpeg4videodec.c	\
-			gstomxrealvideodec.c	\
-			gstomxbufferpool.c \
-			gstomxvideo.c \
-			gstomxvideodec.c	\
-			gstomxvp8dec.c	\
-			gstomxvp6dec.c	\
-			gstomxwmvdec.c	\
-			gstomxavsdec.c	\
-			gstomxsorensondec.c
-
-libGST_OMX_la_CFLAGS = $(GST_COM_CFLAGS) $(libGST_OMXincludedir) -fPIC
-
-#libomx_a_LIBADD = -lpthread
-libGST_OMX_la_LDFLAGS = -lgstreamer-1.0 -lxml2 -lgthread-2.0 -lgmodule-2.0 -lgobject-2.0 -lglib-2.0 -lgstvideo-1.0 -lgstaudio-1.0 -lgstpbutils-1.0
-
-lib_LTLIBRARIES = libGST_OMX.la
-
-- 
1.9.1

