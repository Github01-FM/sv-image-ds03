From ac76b5844c6be4c9462add1b48424277153232a1 Mon Sep 17 00:00:00 2001
From: xf02 <xfei@codeaurora.org>
Date: Mon, 29 Jun 2015 13:43:14 +0800
Subject: [PATCH 40/67] Modify log from print to GST_DEBUG_OBJECT

Change-Id: Ifc23f6173a2d3c9a918962b3fbcd4e93280934cd
---
 omx/gstomxvideodec.c | 70 ++++++++++++++++++++++++++--------------------------
 1 file changed, 35 insertions(+), 35 deletions(-)

diff --git a/omx/gstomxvideodec.c b/omx/gstomxvideodec.c
index 7a86d51..8b1f38b 100644
--- a/omx/gstomxvideodec.c
+++ b/omx/gstomxvideodec.c
@@ -1088,27 +1088,27 @@ gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec * self)
       buffers = g_list_append (buffers, buffer);
 
       {
-	  GstMapInfo info;
-	  gst_buffer_map (buffer, &info, GST_MAP_READ);
-	  if ((guint32) (info.data) & 0xFFF) {
-		gst_buffer_unmap (buffer, &info);
+        GstMapInfo info;
+        gst_buffer_map (buffer, &info, GST_MAP_READ);
+        if ((guint32) (info.data) & 0xFFF) {
+          gst_buffer_unmap (buffer, &info);
 
-		g_list_free_full (buffers, (GDestroyNotify) gst_buffer_unref);
-		buffers = NULL;
+          g_list_free_full (buffers, (GDestroyNotify) gst_buffer_unref);
+          buffers = NULL;
 
-        g_hash_table_destroy (self->omx_buffer_map);
-        self->omx_buffer_map = NULL;
+          g_hash_table_destroy (self->omx_buffer_map);
+          self->omx_buffer_map = NULL;
 
-		err = OMX_ErrorResourcesLost;
-		goto done;
-	
-	  }
+          err = OMX_ErrorResourcesLost;
+
+          GST_ERROR_OBJECT (self, "Failed to allocate aligned output buffer");
+          goto done;
+        }
 
-	  g_hash_table_insert (self->omx_buffer_map, info.data, buffer);
-	  printf("acquire buffer info.data = %p %p\n",buffer,info.data);
-	  gst_buffer_unmap (buffer, &info);
+        g_hash_table_insert (self->omx_buffer_map, info.data, buffer);
+        GST_DEBUG_OBJECT(self, "acquire buffer info.data = %p %p",buffer,info.data);
+        gst_buffer_unmap (buffer, &info);
       }
-  
     }
 
     err = gst_omx_port_use_buffers (port, buffers);
@@ -1119,26 +1119,26 @@ gst_omx_video_dec_allocate_output_buffers (GstOMXVideoDec * self)
       g_list_free_full (buffers, (GDestroyNotify) gst_buffer_unref);
       goto done;
     }
-	if (!was_enabled){
-	err = gst_omx_port_wait_enabled (port, 2 * GST_SECOND);
-	if (err != OMX_ErrorNone) {
-	  GST_INFO_OBJECT (self,
-		  "Failed to wait until port is enabled: %s (0x%08x)",
-		  gst_omx_error_to_string (err), err);
-	  goto done;
-	}
-}
-if(self->out_port_pool)
-{
-	GST_DEBUG_OBJECT (self, "Populating internal buffer pool");
-	GST_OMX_BUFFER_POOL (self->out_port_pool)->other_pool =
-		GST_BUFFER_POOL (gst_object_ref (pool));
-	for (l = buffers; l; l = l->next) {
-	  g_ptr_array_add (GST_OMX_BUFFER_POOL (self->out_port_pool)->buffers,
-		  l->data);
-	}
 
-}	
+    if (!was_enabled) {
+      err = gst_omx_port_wait_enabled (port, 2 * GST_SECOND);
+      if (err != OMX_ErrorNone) {
+        GST_INFO_OBJECT (self,
+                         "Failed to wait until port is enabled: %s (0x%08x)",
+                         gst_omx_error_to_string (err), err);
+        goto done;
+      }
+    }
+
+    if(self->out_port_pool) {
+      GST_DEBUG_OBJECT (self, "Populating internal buffer pool");
+      GST_OMX_BUFFER_POOL (self->out_port_pool)->other_pool =
+		GST_BUFFER_POOL (gst_object_ref (pool));
+      for (l = buffers; l; l = l->next) {
+        g_ptr_array_add (GST_OMX_BUFFER_POOL (self->out_port_pool)->buffers,
+                         l->data);
+      }
+    }
     g_list_free (buffers);
   }
 #else
-- 
1.9.1

